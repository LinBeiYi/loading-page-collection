*{
    /* initialisation */
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* will include padding inside its declared width and height */
}

body{
    height: 100vh; /* 100% if window height */
    /* 弹性布局 水平+垂直居中 */
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #eaeef0;
}

.loader{
    display: flex;
}

.loader span{
    /*e relative position */
    position: relative;
    width: 50px;
    height: 50px;
    background-color: #eaeef0;
    margin: 0 10px; /* first value is referring to the vertical axis and second is horizontal value */
    border-radius: 50%; /* to make the edge rounder */
    /* get shadow and inset means inner shadow */
    box-shadow: -8px -8px 15px rgba(255, 255,255,1),
                8px 8px 15px rgba(0,0,0,0.2),
                inset 3px 3px 5px rgba(0,0,0,0.1),
                inset -1px -1px 5px rgba(255,255,255,1);
    border: 6px solid #eaeef0;
}

.dot_0{ --i: 0; }
.dot_1{ --i: 1; }
.dot_2{ --i: 2; }
.dot_3{ --i: 3; }
.dot_4{ --i: 4; }
.dot_5{ --i: 5; }

.loader span::before{
    content: "";
    /* this position is absolute so it will follow the span */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: aquamarine;
    border-radius: 50%;
    box-shadow: inset 3px 3px 5px rgba(0,0,0,0.1),
                inset -1px -1px 5px rgba(255,255,255,1);
    opacity: 0;
    /* animation, the name of animation
    *  duration, linearly and repeats infinite
    */
    animation: animate 3.0s linear infinite,
               animateColor 4.5s linear infinite;
    animation-delay: calc(var(--i) * 0.15s)
}

/* to allow the color to appear */
@keyframes animate {
    0%, 9.99%, 70.01%{
        opacity: 0;
    }
    10%, 70%{
        opacity: 1;
    }
}

/* to change color */
@keyframes animateColor {
    to{
        filter: hue-rotate(360deg);
    }
}
